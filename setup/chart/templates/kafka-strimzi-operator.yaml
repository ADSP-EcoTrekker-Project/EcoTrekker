
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace  | default .Values.namespace }}
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace  | default .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-namespaced
  apiGroup: rbac.authorization.k8s.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
data:
  log4j2.properties: >
    name = COConfig

    monitorInterval = 30


    appender.console.type = Console

    appender.console.name = STDOUT

    appender.console.layout.type = PatternLayout

    appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L -
    %m%n


    rootLogger.level = ${env:STRIMZI_LOG_LEVEL:-INFO}

    rootLogger.appenderRefs = stdout

    rootLogger.appenderRef.console.ref = STDOUT


    # Kafka AdminClient logging is a bit noisy at INFO level

    logger.kafka.name = org.apache.kafka

    logger.kafka.level = WARN


    # Zookeeper is very verbose even on INFO level -> We set it to WARN by
    default

    logger.zookeepertrustmanager.name = org.apache.zookeeper

    logger.zookeepertrustmanager.level = WARN


    # Keeps separate level for Netty logging -> to not be changed by the root
    logger

    logger.netty.name = io.netty

    logger.netty.level = INFO
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-kafka-broker
  labels:
    app: strimzi
rules:
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-entity-operator
  labels:
    app: strimzi
rules:
  - apiGroups:
      - kafka.strimzi.io
    resources:
      - kafkatopics
      - kafkatopics/status
      - kafkausers
      - kafkausers/status
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - ''
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-entity-operator-delegation
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-entity-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-global
  labels:
    app: strimzi
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-global
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-kafka-client
  labels:
    app: strimzi
rules:
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator-kafka-broker-delegation
  labels:
    app: strimzi
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-kafka-broker
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-watched
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-watched
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-operator-leader-election
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-operator-leader-election
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-operator-namespaced
  labels:
    app: strimzi
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ''
    resources:
      - pods
      - serviceaccounts
      - configmaps
      - services
      - endpoints
      - secrets
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/scale
      - deployments/status
      - statefulsets
      - replicasets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - ''
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
  - apiGroups:
      - build.openshift.io
    resources:
      - buildconfigs
      - buildconfigs/instantiate
      - builds
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
      - ingresses
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - route.openshift.io
    resources:
      - routes
      - routes/custom-host
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
  - apiGroups:
      - image.openshift.io
    resources:
      - imagestreams
    verbs:
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: strimzi-cluster-operator-kafka-client-delegation
  labels:
    app: strimzi
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-operator
    namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
roleRef:
  kind: ClusterRole
  name: strimzi-kafka-client
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strimzi-cluster-operator
  labels:
    app: strimzi
  namespace: {{ .Values.kafka.namespace | default "ecotrekker" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
      strimzi.io/kind: cluster-operator
  template:
    metadata:
      labels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    spec:
      serviceAccountName: strimzi-cluster-operator
      volumes:
        - name: strimzi-tmp
          emptyDir:
            medium: Memory
            sizeLimit: 1Mi
        - name: co-config-volume
          configMap:
            name: strimzi-cluster-operator
      containers:
        - name: strimzi-cluster-operator
          image: 'quay.io/strimzi/operator:0.38.0'
          ports:
            - containerPort: 8080
              name: http
          args:
            - /opt/strimzi/bin/cluster_operator_run.sh
          volumeMounts:
            - name: strimzi-tmp
              mountPath: /tmp
            - name: co-config-volume
              mountPath: /opt/strimzi/custom-config/
          env:
            - name: STRIMZI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
              value: '120000'
            - name: STRIMZI_OPERATION_TIMEOUT_MS
              value: '300000'
            - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
              value: 'quay.io/strimzi/kafka:0.38.0-kafka-3.6.0'
            - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
              value: 'quay.io/strimzi/kafka:0.38.0-kafka-3.6.0'
            - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
              value: 'quay.io/strimzi/kafka:0.38.0-kafka-3.6.0'
            - name: STRIMZI_KAFKA_IMAGES
              value: |
                3.5.0=quay.io/strimzi/kafka:0.38.0-kafka-3.5.0
                3.5.1=quay.io/strimzi/kafka:0.38.0-kafka-3.5.1
                3.6.0=quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
            - name: STRIMZI_KAFKA_CONNECT_IMAGES
              value: |
                3.5.0=quay.io/strimzi/kafka:0.38.0-kafka-3.5.0
                3.5.1=quay.io/strimzi/kafka:0.38.0-kafka-3.5.1
                3.6.0=quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
            - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
              value: |
                3.5.0=quay.io/strimzi/kafka:0.38.0-kafka-3.5.0
                3.5.1=quay.io/strimzi/kafka:0.38.0-kafka-3.5.1
                3.6.0=quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
            - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
              value: |
                3.5.0=quay.io/strimzi/kafka:0.38.0-kafka-3.5.0
                3.5.1=quay.io/strimzi/kafka:0.38.0-kafka-3.5.1
                3.6.0=quay.io/strimzi/kafka:0.38.0-kafka-3.6.0
            - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
              value: 'quay.io/strimzi/operator:0.38.0'
            - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
              value: 'quay.io/strimzi/operator:0.38.0'
            - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
              value: 'quay.io/strimzi/operator:0.38.0'
            - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
              value: 'quay.io/strimzi/kafka-bridge:0.27.0'
            - name: STRIMZI_DEFAULT_KANIKO_EXECUTOR_IMAGE
              value: 'quay.io/strimzi/kaniko-executor:0.38.0'
            - name: STRIMZI_DEFAULT_MAVEN_BUILDER
              value: 'quay.io/strimzi/maven-builder:0.38.0'
            - name: STRIMZI_OPERATOR_NAMESPACE
              value: "*"
            - name: STRIMZI_FEATURE_GATES
              value: ''
            - name: STRIMZI_LEADER_ELECTION_ENABLED
              value: 'true'
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAME
              value: strimzi-cluster-operator
            - name: STRIMZI_LEADER_ELECTION_LEASE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_LEADER_ELECTION_IDENTITY
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          livenessProbe:
            httpGet:
              path: /healthy
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              cpu: 1000m
              memory: 384Mi
            requests:
              cpu: 200m
              memory: 384Mi