apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ lower (include "ecotrekker.name" .) }}-public-transport-distance-deployment
  labels:
    {{- include "ecotrekker.labels" . | nindent 4 }}
    app.kubernetes.io/microservice: public-transport-distance
spec:
  replicas: {{ .Values.ecotrekker.publictransportdistance.replicas }}
  selector:
    matchLabels:
      {{- include "ecotrekker.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/microservice: public-transport-distance
  template:
    metadata:
      labels:
        {{- include "ecotrekker.labels" . | nindent 8 }}
        app.kubernetes.io/microservice: public-transport-distance
    spec:
      containers:
      - name: {{ lower (include "ecotrekker.name" .) }}-public-transport-distance
        image: {{ .Values.ecotrekker.publictransportdistance.image }}
        resources:
          requests:
            cpu: "128m"
            memory: "512Mi"
          limits:
            cpu: "384m"
            memory: "512Mi"
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /status/alive
            port: 8080
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /status/ready
            port: 8080
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: {{ lower (include "ecotrekker.name" .) }}-public-transport-distance-service
  labels:
    {{- include "ecotrekker.labels" . | nindent 4 }}
    app.kubernetes.io/microservice: public-transport-distance
spec:
  selector:
    {{- include "ecotrekker.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/microservice: public-transport-distance
  ports:
    - name: rest
      protocol: TCP
      port: 8080
      targetPort: 8080
